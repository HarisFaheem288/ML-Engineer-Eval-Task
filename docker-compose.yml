version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami
    networks:
      - kookree_net
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 3

  kafka:
    image: bitnami/kafka:3.4
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami
    depends_on:
      - zookeeper
    networks:
      - kookree_net
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 3

  inference-service:
    build:
      context: .
      dockerfile: inference_service/Dockerfile
    container_name: inference-service
    ports:
      - "50051:50051"
      - "5000:5000"
    environment:
      - PYTHONUNBUFFERED=1
      - GRPC_MAX_WORKERS=10
    networks:
      - kookree_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  producer:
    build:
      context: .
      dockerfile: streaming_simulator/Dockerfile.producer
    container_name: frame-producer
    environment:
      - KAFKA_BROKER_URL=kafka:9092
      - TOPIC_NAME=webcam-frames
      - LOG_LEVEL=INFO
      - MAX_FRAME_RATE=30
    volumes:
      - ./streaming_simulator:/app
      - ./streaming_simulator/video.mp4:/app/video.mp4
    depends_on:
      - kafka
    networks:
      - kookree_net
    restart: unless-stopped

  consumer:
    build:
      context: .
      dockerfile: streaming_simulator/Dockerfile.consumer
    container_name: frame-consumer
    ports:
      - "8501:8501"
    environment:
      - KAFKA_BROKER_URL=kafka:9092
      - GRPC_SERVER=inference-service:50051
      - TOPIC_NAME=webcam-frames
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    # volumes:
    #   - ./streaming_simulator:/app
    depends_on:
      - kafka
      - inference-service
    networks:
      - kookree_net
    restart: unless-stopped

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  kookree_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16